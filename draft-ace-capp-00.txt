Internet-Draft                  CAPP Protocol                Ace Shim (Hopae Inc.)
Intended status: Informational                                June 12, 2025
Expires: December 12, 2025

                Contextual Authentication Presentation Protocol (CAPP)
                        draft-ace-capp-00

Abstract

   This document defines CAPP, the Contextual Authentication
   Presentation Protocol, a lightweight, pre-consented, and
   context-triggered protocol for the presentation of Verifiable
   Credentials (VCs). CAPP enables secure, autonomous, and minimal
   disclosure authentication flows without requiring interactive
   challenge-response mechanisms, optimized for physical and recurring
   access use cases.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF). Note that other groups may also distribute
   working documents as Internet-Drafts. The list of current
   Internet-Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six
   months and may be updated, replaced, or obsoleted by other documents
   at any time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors. All rights reserved.

Table of Contents

   1. Introduction ................................................ 2
   2. Terminology ................................................ 3
   3. Protocol Overview .......................................... 4
   4. Consent Profile Structure .................................. 6
   5. Presentation Format ........................................ 7
   6. Security Considerations .................................... 8
   7. Privacy Considerations ..................................... 9
   8. Interoperability ........................................... 10
   9. IANA Considerations ........................................ 11
   10. References ................................................ 12

1. Introduction

   The use of Verifiable Credentials (VCs) often requires a
   Verifier-issued challenge, user consent, and bi-directional
   communication. However, many real-world scenarios—like building
   entry or ticket validation—benefit from zero-touch, pre-consented,
   and contextually triggered authentication.

   CAPP introduces a holder-driven, passive presentation model that
   uses pre-configured consent profiles, time/location/purpose
   bindings, and simple triggers (QR, NFC, BLE) to initiate
   authentication.

2. Terminology

   Holder: The entity in possession of verifiable credentials.

   Verifier: The entity that receives and validates presented credentials.

   VP: Verifiable Presentation, a signed data container with one or
       more credentials.

   Consent Profile: Policy data stored by the Holder defining when to
       auto-present credentials.

   Trigger: A passive signal (QR, NFC, BLE, GPS) indicating that
       presentation should occur.

3. Protocol Overview

   CAPP includes four major steps:

   a) Preparation Phase
      - Holder creates a VP with purpose-bound, audience-bound, and
        time-limited constraints.
      - Stores a Consent Profile locally (may include geo/time/purpose).

   b) Trigger Reception
      - Verifier emits a signed context (via QR/NFC/BLE/geofence).
      - URI format: capp://verify.example.com?context=entry&sig=XYZ

   c) Policy Match
      - Device checks local consent profile for matching verifier ID,
        context, and time.

   d) Presentation
      - Device sends VP to pre-defined verifier endpoint
        (DIDComm, HTTPS POST, or URL return path).

4. Consent Profile Structure

   Consent Profiles MUST be stored securely (e.g., TEE, biometric-locked).

   Example:
   {
     "verifier": "did:example:building-a",
     "purpose": "building-entry",
     "location": "166 Geary St, SF",
     "timeWindow": "08:00–18:00",
     "autoPresent": true,
     "disclosurePolicy": "minimal"
   }

   Disclosure Policy SHOULD default to minimal unless explicitly overridden.

5. Presentation Format

   The Holder creates a signed Verifiable Presentation of the following form:

   {
     "type": ["VerifiablePresentation", "CAPPPresentation"],
     "holder": "did:example:holder123",
     "verifiableCredential": ["<SD-JWT or BBS+ credential>"],
     "purpose": "building-entry",
     "aud": "did:example:corp-building-a",
     "exp": "2025-06-12T09:30:00Z",
     "nonce": "f8a8...x3b",
     "proof": {
       "type": "Ed25519Signature2020",
       "created": "2025-06-12T08:45:00Z",
       "verificationMethod": "did:example:holder123#key-1",
       "proofPurpose": "authentication"
     }
   }

6. Security Considerations

   - All VP must include `exp`, `nonce`, and `aud` fields.
   - Trigger payloads must be signed by verifier DID keys.
   - Replay attacks are mitigated via expiry and nonce.
   - Consent Profiles should be encrypted and require biometrics/PIN to modify.
   - Pairwise DIDs are recommended to limit cross-context linkability.

7. Privacy Considerations

   CAPP enables purpose-bound disclosure. Verifiers MUST NOT reuse or
   correlate identifiers beyond the intended session or context. 
   Consent Profiles allow users to control when and where disclosure occurs.

8. Interoperability

   CAPP is compatible with:
   - W3C VC Data Model
   - SD-JWT for selective disclosure
   - DIDComm v2 transmission
   - OIDC4VP optional fallback

9. IANA Considerations

   This document makes no request of IANA at this time.

10. References

   [VC-DATA-MODEL] https://www.w3.org/TR/vc-data-model/  
   [SD-JWT] https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html  
   [DIDCOMM] https://identity.foundation/didcomm-messaging/spec/  

---

   Author's Address:
   Ace Shim  
   Hopae Inc.  
   Email: ace@hopae.com

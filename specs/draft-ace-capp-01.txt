Internet-Draft                  CAPP Protocol                Ace Shim (Hopae Inc.)
Intended status: Informational                                August 19, 2025
Expires: February 19, 2026

                Contextual Authentication Presentation Protocol (CAPP)
                        draft-ace-capp-01

Abstract

   This document defines CAPP, the Contextual Authentication
   Presentation Protocol, a lightweight, proximity-bound, and
   context-triggered protocol for the one-way presentation of Verifiable
   Credentials (VCs). CAPP enables secure, designated-verifier-bound,
   and minimal-disclosure authentication flows optimized for physical
   and recurring access use cases, such as building entry, transit, and
   ticket validation. In contrast to multi-step challenge-response
   protocols, CAPP supports a "tap-to-go" model where a single user
   action is sufficient to present credentials safely to the intended
   verifier.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF). Note that other groups may also distribute
   working documents as Internet-Drafts. The list of current
   Internet-Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six
   months and may be updated, replaced, or obsoleted by other documents
   at any time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors. All rights reserved.

Table of Contents

   1. Introduction ................................................ 2
   2. Terminology ................................................ 3
   3. Protocol Overview .......................................... 4
   4. Transit Mode Profile ....................................... 6
   5. Presentation Format ........................................ 8
   6. Security Considerations .................................... 9
   7. Privacy Considerations ..................................... 11
   8. Interoperability ........................................... 12
   9. IANA Considerations ........................................ 13
   10. References ................................................ 14

1. Introduction

   Current VC presentation protocols (OIDC4VP, SD-JWT, DIDComm) often
   require multi-step interactions: challenge issuance, request, user
   approval, and final verification. For physical and high-throughput
   use cases (e.g., transit gates, workplace access, event ticketing),
   these multi-round trips degrade user experience.

   CAPP introduces a one-way presentation model, in which the holder
   presents to a designated verifier bound by proximity context. This
   approach balances security and usability by enabling "safe-enough"
   ephemeral proofs that are only valid in the moment, for the intended
   verifier, with minimal user interaction (e.g., a single tap or scan).

   CAPP is not a new credential format. It is a protocol wrapper that
   composes with existing VC formats (SD-JWT, BBS+, ISO mDL) and
   transports (HTTPS POST, DIDComm, NFC, BLE). Its novelty lies in
   context binding, designated-verifier enforcement, and profiles such
   as "Transit Mode" that enable tap-to-go experiences.

2. Terminology

   Holder: Entity in possession of verifiable credentials.

   Verifier: Entity that requests and validates presented credentials.

   VP: Verifiable Presentation, a signed data container with one or more
       credentials.

   CAPP Request Handle (T): An ephemeral, signed token advertised by a
       verifier to establish context and proximity.

   Proximity Proof: A cryptographic binding between the holder’s
       presentation and the verifier’s ephemeral key.

   Transit Mode: A CAPP profile enabling frictionless tap-to-go
       experiences, similar to "Express Transit" in Apple Wallet.

3. Protocol Overview

   a) Verifier Advertisement
      - Verifier generates an ephemeral keypair and nonce.
      - Constructs a CAPP Request Handle (T):
        {
          gate_id,
          verifier_pubkey_ephem,
          nonce,
          issued_at,
          expires_at (<= 5s),
          policy_hint
        }
      - Signs T with a long-term verifier root key.
      - Broadcasts T via NFC, BLE, or QR.

   b) Holder Binding
      - Holder receives T.
      - Checks consent profile or prompts user (depending on mode).
      - Constructs a CAPP Presentation, binding disclosures to T using
        proof of possession and ECDH-derived MAC.

   c) One-Way Presentation
      - Holder transmits the CAPP Presentation via NFC channel, BLE,
        HTTPS POST, or DIDComm.
      - No explicit challenge-response is required; the verifier’s
        ephemeral context is sufficient.

   d) Verification
      - Verifier validates freshness, signature of T, nonce uniqueness,
        and the proximity proof.
      - If valid, grants access.

4. Transit Mode Profile

   Transit Mode is an optimized profile of CAPP for high-throughput,
   frictionless access.

   * Transport: NFC (primary), BLE (optional).
   * TTL: Ephemeral handles expire within 3–5 seconds.
   * Consent: Holder stores an auto-present profile for the verifier,
     marked "capp-transit-v1".
   * Disclosure policy: Minimal (validity proof only).
   * UX: Single tap or walk-through; no biometric/PIN per use unless
     configured.

   Example Consent Profile:
   {
     "verifier": "did:example:metro-line-a",
     "purpose": "transit-entry",
     "autoPresent": true,
     "mode": "capp-transit-v1",
     "disclosurePolicy": "minimal"
   }

   Transit Mode parallels Apple Wallet’s Express Transit but is
   credential-format agnostic and wallet-agnostic.

5. Presentation Format

   A CAPP Presentation includes:
   {
     "type": ["VerifiablePresentation", "CAPPPresentation"],
     "holder": "did:example:holder123",
     "verifiableCredential": ["<SD-JWT or VC-JWT>"],
     "context": {
       "gate_id": "...",
       "aud": "did:example:verifier",
       "T_hash": "..."
     },
     "proximityProof": {
       "ecdh": "holder_pub x verifier_ephem_pub",
       "mac": "HMAC(K, disclosures || context || nonce)"
     },
     "exp": "2025-08-19T09:30:00Z",
     "nonce": "f8a8...x3b"
   }

6. Security Considerations

   - Ephemeral verifier keys prevent replay beyond a few seconds.
   - CAPP Presentations MUST include expiry, nonce, and designated
     verifier audience.
   - NFC/BLE provides physical proximity; QR should enforce shorter TTL.
   - Wallets MUST allow users to configure which verifiers can use
     auto-present (Transit Mode).
   - Stronger assurance profiles may require local user authentication
     (PIN/biometric) before release.

7. Privacy Considerations

   - Pairwise DIDs recommended to prevent cross-verifier correlation.
   - Transit Mode SHOULD minimize disclosed attributes.
   - Verifiers MUST NOT use stable identifiers for tracking beyond
     session.

8. Interoperability

   - Compatible with: W3C VC Data Model, SD-JWT, VC-JWT, ISO mDL.
   - Transport bindings: HTTPS POST, DIDComm v2, NFC, BLE, QR.
   - Works alongside OIDC4VP; CAPP can serve as a front-channel
     trigger for OIDC-based verification.

9. IANA Considerations

   - Potential registration of a "capp://" URI scheme.
   - Registry for named CAPP profiles (e.g., capp-transit-v1).

10. References

   [VC-DATA-MODEL] https://www.w3.org/TR/vc-data-model/  
   [SD-JWT] https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html  
   [DIDCOMM] https://identity.foundation/didcomm-messaging/spec/  
   [OIDC4VP] https://openid.net/specs/openid-4-verifiable-presentations-1_0.html  

Author's Address:

   Ace Shim  
   Hopae Inc.  
   Email: ace@hopae.com
